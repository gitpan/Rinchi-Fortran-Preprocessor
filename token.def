/*
 * DEF_CHARACTER(string, bison_token, type)
 * 1 = BCS, 2 = ECS, 4 = white space, 8 = punctuation
 */

DEF_CHARACTER("nul", "\\000",ECS_NULL,2)
DEF_CHARACTER("soh", "\\001",ASC_SOH,0)
DEF_CHARACTER("stx", "\\002",ASC_STX,0)
DEF_CHARACTER("etx", "\\003",ASC_ETX,0)
DEF_CHARACTER("eot", "\\004",ASC_EOT,0)
DEF_CHARACTER("enq", "\\005",ASC_ENQ,0)
DEF_CHARACTER("ack", "\\006",ASC_ACK,0)
DEF_CHARACTER("bel", "\\007",ECS_ALERT,2)
DEF_CHARACTER("bs", "\\010",ECS_BACKSPACE,2)
DEF_CHARACTER("tab", "\\011",BCS_WHTSP_TAB,5)
DEF_CHARACTER("lf", "\\012",BCS_WHTSP_NEWLINE,5)
DEF_CHARACTER("vt", "\\013",BCS_WHTSP_VERTICAL_TAB,5)
DEF_CHARACTER("ff", "\\014",BCS_WHTSP_FORMFEED,5)
DEF_CHARACTER("cr", "\\015",ECS_CARRIAGE_RETURN,6)
DEF_CHARACTER("so", "\\016",ASC_SHIFT_OUT,0)
DEF_CHARACTER("si", "\\017",ASC_SHIFT_IN,0)
DEF_CHARACTER("dle", "\\020",ASC_DLE,0)
DEF_CHARACTER("dc1", "\\021",ASC_DC1,0)
DEF_CHARACTER("dc2", "\\022",ASC_DC2,0)
DEF_CHARACTER("dc3", "\\023",ASC_DC3,0)
DEF_CHARACTER("dc4", "\\024",ASC_DC4,0)
DEF_CHARACTER("nak", "\\025",ASC_NAK,0)
DEF_CHARACTER("syn", "\\026",ASC_SYN,0)
DEF_CHARACTER("etb", "\\027",ASC_ETB,0)
DEF_CHARACTER("can", "\\030",ASC_CAN,0)
DEF_CHARACTER("em", "\\031",ASC_EM,0)
DEF_CHARACTER("sub", "\\032",ASC_SUB,0)
DEF_CHARACTER("esc", "\\033",ASC_ESC,0)
DEF_CHARACTER("is4", "\\034",ASC_IS4,0)
DEF_CHARACTER("is3", "\\035",ASC_IS3,0)
DEF_CHARACTER("is2", "\\036",ASC_IS2,0)
DEF_CHARACTER("is1", "\\037",ASC_IS1,0)
DEF_CHARACTER("spc", " ",BCS_WHTSP_SPACE,5)
DEF_CHARACTER("excl", "!",BCS_PUNCT_EXCLAMATION,9)
DEF_CHARACTER("quot", "\042",BCS_PUNCT_QUOTE,9)
DEF_CHARACTER("hash", "#",BCS_PUNCT_HASH,9)
DEF_CHARACTER("dollar", "$",ASC_DOLLAR_SIGN,0)
DEF_CHARACTER("percent", "%",BCS_PUNCT_PERCENT,9)
DEF_CHARACTER("amp", "&",BCS_PUNCT_AMPERSAND,9)
DEF_CHARACTER("apos", "\047",BCS_PUNCT_APOSTROPHE,9)
DEF_CHARACTER("paren", "(",BCS_PUNCT_OPEN_PARENTHESIS,9)
DEF_CHARACTER("paren", ")",BCS_PUNCT_CLOSE_PARENTHESIS,9)
DEF_CHARACTER("ast", "*",BCS_PUNCT_ASTERISK,9)
DEF_CHARACTER("plus", "+",BCS_PUNCT_PLUS,9)
DEF_CHARACTER("comma", ",",BCS_PUNCT_COMMA,9)
DEF_CHARACTER("minus", "-",BCS_PUNCT_MINUS,9)
DEF_CHARACTER("period", ".",BCS_PUNCT_PERIOD,9)
DEF_CHARACTER("slash", "/",BCS_PUNCT_SLASH,9)
DEF_CHARACTER("dig0", "0",BCS_DIGIT_0,1)
DEF_CHARACTER("dig1", "1",BCS_DIGIT_1,1)
DEF_CHARACTER("dig2", "2",BCS_DIGIT_2,1)
DEF_CHARACTER("dig3", "3",BCS_DIGIT_3,1)
DEF_CHARACTER("dig4", "4",BCS_DIGIT_4,1)
DEF_CHARACTER("dig5", "5",BCS_DIGIT_5,1)
DEF_CHARACTER("dig6", "6",BCS_DIGIT_6,1)
DEF_CHARACTER("dig7", "7",BCS_DIGIT_7,1)
DEF_CHARACTER("dig8", "8",BCS_DIGIT_8,1)
DEF_CHARACTER("dig9", "9",BCS_DIGIT_9,1)
DEF_CHARACTER("colon", ":",BCS_PUNCT_COLON,9)
DEF_CHARACTER("eos", ";",BCS_PUNCT_SEMICOLON,9)
DEF_CHARACTER("lt", "<",BCS_PUNCT_LESS_THAN,9)
DEF_CHARACTER("eq", "=",BCS_PUNCT_EQUAL,9)
DEF_CHARACTER("gt", ">",BCS_PUNCT_GREATER_THAN,9)
DEF_CHARACTER("question", "?",BCS_PUNCT_QUESTION,9)
DEF_CHARACTER("at", "@",ASC_AT_SIGN,0)
DEF_CHARACTER("A", "A",BCS_UPPER_A,1)
DEF_CHARACTER("B", "B",BCS_UPPER_B,1)
DEF_CHARACTER("C", "C",BCS_UPPER_C,1)
DEF_CHARACTER("D", "D",BCS_UPPER_D,1)
DEF_CHARACTER("E", "E",BCS_UPPER_E,1)
DEF_CHARACTER("F", "F",BCS_UPPER_F,1)
DEF_CHARACTER("G", "G",BCS_UPPER_G,1)
DEF_CHARACTER("H", "H",BCS_UPPER_H,1)
DEF_CHARACTER("I", "I",BCS_UPPER_I,1)
DEF_CHARACTER("J", "J",BCS_UPPER_J,1)
DEF_CHARACTER("K", "K",BCS_UPPER_K,1)
DEF_CHARACTER("L", "L",BCS_UPPER_L,1)
DEF_CHARACTER("M", "M",BCS_UPPER_M,1)
DEF_CHARACTER("N", "N",BCS_UPPER_N,1)
DEF_CHARACTER("U", "O",BCS_UPPER_O,1)
DEF_CHARACTER("P", "P",BCS_UPPER_P,1)
DEF_CHARACTER("Q", "Q",BCS_UPPER_Q,1)
DEF_CHARACTER("R", "R",BCS_UPPER_R,1)
DEF_CHARACTER("S", "S",BCS_UPPER_S,1)
DEF_CHARACTER("T", "T",BCS_UPPER_T,1)
DEF_CHARACTER("U", "U",BCS_UPPER_U,1)
DEF_CHARACTER("V", "V",BCS_UPPER_V,1)
DEF_CHARACTER("W", "W",BCS_UPPER_W,1)
DEF_CHARACTER("X", "X",BCS_UPPER_X,1)
DEF_CHARACTER("Y", "Y",BCS_UPPER_Y,1)
DEF_CHARACTER("Z", "Z",BCS_UPPER_Z,1)
DEF_CHARACTER("bracket", "[",BCS_PUNCT_OPEN_BRACKET,9)
DEF_CHARACTER("bslash", "\134",BCS_PUNCT_BACKSLASH,9)
DEF_CHARACTER("bracket", "]",BCS_PUNCT_CLOSE_BRACKET,9)
DEF_CHARACTER("caret", "^",BCS_PUNCT_CARET,9)
DEF_CHARACTER("under", "_",BCS_PUNCT_UNDERSCORE,9)
DEF_CHARACTER("a", "a",BCS_LOWER_A,1)
DEF_CHARACTER("b", "b",BCS_LOWER_B,1)
DEF_CHARACTER("c", "c",BCS_LOWER_C,1)
DEF_CHARACTER("d", "d",BCS_LOWER_D,1)
DEF_CHARACTER("e", "e",BCS_LOWER_E,1)
DEF_CHARACTER("f", "f",BCS_LOWER_F,1)
DEF_CHARACTER("g", "g",BCS_LOWER_G,1)
DEF_CHARACTER("h", "h",BCS_LOWER_H,1)
DEF_CHARACTER("i", "i",BCS_LOWER_I,1)
DEF_CHARACTER("j", "j",BCS_LOWER_J,1)
DEF_CHARACTER("k", "k",BCS_LOWER_K,1)
DEF_CHARACTER("l", "l",BCS_LOWER_L,1)
DEF_CHARACTER("m", ",",BCS_LOWER_M,1)
DEF_CHARACTER("n", "n",BCS_LOWER_N,1)
DEF_CHARACTER("o", "o",BCS_LOWER_O,1)
DEF_CHARACTER("p", "p",BCS_LOWER_P,1)
DEF_CHARACTER("q", "q",BCS_LOWER_Q,1)
DEF_CHARACTER("r", "r",BCS_LOWER_R,1)
DEF_CHARACTER("s", "s",BCS_LOWER_S,1)
DEF_CHARACTER("t", "t",BCS_LOWER_T,1)
DEF_CHARACTER("u", "u",BCS_LOWER_U,1)
DEF_CHARACTER("v", "v",BCS_LOWER_V,1)
DEF_CHARACTER("w", "w",BCS_LOWER_W,1)
DEF_CHARACTER("x", "x",BCS_LOWER_X,1)
DEF_CHARACTER("y", "y",BCS_LOWER_Y,1)
DEF_CHARACTER("z", "z",BCS_LOWER_Z,1)
DEF_CHARACTER("brace", "{",BCS_PUNCT_OPEN_BRACE,9)
DEF_CHARACTER("vbar", "|",BCS_PUNCT_VERTICAL_BAR,9)
DEF_CHARACTER("brace", "}",BCS_PUNCT_CLOSE_BRACE,9)
DEF_CHARACTER("tilde", "~",BCS_PUNCT_TILDE,9)
DEF_CHARACTER("del", "\\177",ASC_DEL,0)

DEF_CHARACTER("brace", "<\045",ALT_PUNCT_OPEN_BRACE,9)
DEF_CHARACTER("brace", "\045>",ALT_PUNCT_CLOSE_BRACE,9)
DEF_CHARACTER("bracket", "<:",ALT_PUNCT_OPEN_BRACKET,9)
DEF_CHARACTER("bracket", ":>",ALT_PUNCT_CLOSE_BRACKET,9)
DEF_CHARACTER("hash", "\045:",ALT_PUNCT_HASH,9)

DEF_KEYWORD("abstract",           KWD_ABSTRACT           )
DEF_KEYWORD("abstract_interface", KWD_ABSTRACT_INTERFACE )
DEF_KEYWORD("action",             KWD_ACTION             )
DEF_KEYWORD("advance",            KWD_ADVANCE            )
DEF_KEYWORD("access",             KWD_ACCESS             )
DEF_KEYWORD("allocatable",        KWD_ALLOCATABLE        )
DEF_KEYWORD("allocate",           KWD_ALLOCATE           )
DEF_KEYWORD("assign",             KWD_ASSIGN             )
DEF_KEYWORD("associate",          KWD_ASSOCIATE          )
DEF_KEYWORD("asynchronous",       KWD_ASYNCHRONOUS       )
DEF_KEYWORD("backspace",          KWD_BACKSPACE          )
DEF_KEYWORD("bind",               KWD_BIND               )
DEF_KEYWORD("blank",              KWD_BLANK              )
DEF_KEYWORD("block",              KWD_BLOCK              )
DEF_KEYWORD("block_data",         KWD_BLOCK_DATA         )
DEF_KEYWORD("call",               KWD_CALL               )
DEF_KEYWORD("case",               KWD_CASE               )
DEF_KEYWORD("character",          KWD_CHARACTER          )
DEF_KEYWORD("class",              KWD_CLASS              )
DEF_KEYWORD("class_default",      KWD_CLASS_DEFAULT      )
DEF_KEYWORD("class_is",           KWD_CLASS_IS           )
DEF_KEYWORD("close",              KWD_CLOSE              )
DEF_KEYWORD("common",             KWD_COMMON             )
DEF_KEYWORD("complex",            KWD_COMPLEX            )
DEF_KEYWORD("contains",           KWD_CONTAINS           )
DEF_KEYWORD("contiguous",         KWD_CONTIGUOUS         )
DEF_KEYWORD("continue",           KWD_CONTINUE           )
DEF_KEYWORD("cycle",              KWD_CYCLE              )
DEF_KEYWORD("data",               KWD_DATA               )
DEF_KEYWORD("deallocate",         KWD_DEALLOCATE         )
DEF_KEYWORD("default",            KWD_DEFAULT            )
DEF_KEYWORD("deferred",           KWD_DEFERRED           )
DEF_KEYWORD("dimension",          KWD_DIMENSION          )
DEF_KEYWORD("direct",             KWD_DIRECT             )
DEF_KEYWORD("do",                 KWD_DO                 )
DEF_KEYWORD("double",             KWD_DOUBLE             )
DEF_KEYWORD("double_complex",     KWD_DOUBLE_COMPLEX     )
DEF_KEYWORD("double_precision",   KWD_DOUBLE_PRECISION   )
DEF_KEYWORD("elemental",          KWD_ELEMENTAL          )
DEF_KEYWORD("else",               KWD_ELSE               )
DEF_KEYWORD("else_if",            KWD_ELSE_IF            )
DEF_KEYWORD("else_where",         KWD_ELSE_WHERE         )
DEF_KEYWORD("end",                KWD_END                )  
DEF_KEYWORD("encoding",           KWD_ENCODING           )
DEF_KEYWORD("end_associate",      KWD_END_ASSOCIATE      )
DEF_KEYWORD("end_block",          KWD_END_BLOCK          )
DEF_KEYWORD("end_block_data",     KWD_END_BLOCK_DATA     )
DEF_KEYWORD("end_do",             KWD_END_DO             )
DEF_KEYWORD("end_enum",           KWD_END_ENUM           )
DEF_KEYWORD("end_file",           KWD_END_FILE           )
DEF_KEYWORD("end_forall",         KWD_END_FORALL         )
DEF_KEYWORD("end_function",       KWD_END_FUNCTION       )
DEF_KEYWORD("end_if",             KWD_END_IF             )
DEF_KEYWORD("end_interface",      KWD_END_INTERFACE      )
DEF_KEYWORD("end_module",         KWD_END_MODULE         )
DEF_KEYWORD("end_procedure",      KWD_END_PROCEDURE      )
DEF_KEYWORD("end_program",        KWD_END_PROGRAM        )
DEF_KEYWORD("end_select",         KWD_END_SELECT         )
DEF_KEYWORD("end_submodule",      KWD_END_SUBMODULE      )
DEF_KEYWORD("end_subroutine",     KWD_END_SUBROUTINE     )
DEF_KEYWORD("end_type",           KWD_END_TYPE           )
DEF_KEYWORD("end_where",          KWD_END_WHERE          )
DEF_KEYWORD("entry",              KWD_ENTRY              )
DEF_KEYWORD("eor",                KWD_EOR                )
DEF_KEYWORD("equivalence",        KWD_EQUIVALENCE        )
DEF_KEYWORD("err",                KWD_ERR                )
DEF_KEYWORD("errmsg",             KWD_ERRMSG             )
DEF_KEYWORD("exist",              KWD_EXIST              )
DEF_KEYWORD("exit",               KWD_EXIT               )
DEF_KEYWORD("extends",            KWD_EXTENDS            )
DEF_KEYWORD("extensible",         KWD_EXTENSIBLE         )
DEF_KEYWORD("external",           KWD_EXTERNAL           )
DEF_KEYWORD("false",              KWD_FALSE              )
DEF_KEYWORD("file",               KWD_FILE               )
DEF_KEYWORD("final",              KWD_FINAL              )
DEF_KEYWORD("flush",              KWD_FLUSH              )
DEF_KEYWORD("fmt",                KWD_FMT                )
DEF_KEYWORD("forall",             KWD_FORALL             )
DEF_KEYWORD("form",               KWD_FORM               )
DEF_KEYWORD("format",             KWD_FORMAT             )
DEF_KEYWORD("formatted",          KWD_FORMATTED          )
DEF_KEYWORD("function",           KWD_FUNCTION           )
DEF_KEYWORD("generic",            KWD_GENERIC            )
DEF_KEYWORD("goto",               KWD_GOTO               )
DEF_KEYWORD("if",                 KWD_IF                 )
DEF_KEYWORD("implicit",           KWD_IMPLICIT           )
DEF_KEYWORD("implicit_none",      KWD_IMPLICIT_NONE      )
DEF_KEYWORD("import",             KWD_IMPORT             )
DEF_KEYWORD("impure",             KWD_IMPURE             )
DEF_KEYWORD("in",                 KWD_IN                 )
DEF_KEYWORD("in_out",             KWD_IN_OUT             )
DEF_KEYWORD("include",            KWD_INCLUDE            )
DEF_KEYWORD("inquire",            KWD_INQUIRE            )
DEF_KEYWORD("integer",            KWD_INTEGER            )
DEF_KEYWORD("intent",             KWD_INTENT             )
DEF_KEYWORD("interface",          KWD_INTERFACE          )
DEF_KEYWORD("intrinsic",          KWD_INTRINSIC          )
DEF_KEYWORD("iostat",             KWD_IOSTAT             )
DEF_KEYWORD("iomsg",              KWD_IOMSG              )
DEF_KEYWORD("kind",               KWD_KIND               )
DEF_KEYWORD("let",                KWD_LET                )
DEF_KEYWORD("logical",            KWD_LOGICAL            )
DEF_KEYWORD("module",             KWD_MODULE             )
DEF_KEYWORD("mold",               KWD_MOLD               )
DEF_KEYWORD("name",               KWD_NAME               )
DEF_KEYWORD("named",              KWD_NAMED              )
DEF_KEYWORD("namelist",           KWD_NAMELIST           )
DEF_KEYWORD("nextrec",            KWD_NEXTREC            )
DEF_KEYWORD("non_intrinsic",      KWD_NON_INTRINSIC      )
DEF_KEYWORD("non_overridable",    KWD_NON_OVERRIDABLE    )
DEF_KEYWORD("nonkind",            KWD_NONKIND            )
DEF_KEYWORD("none",               KWD_NONE               )
DEF_KEYWORD("nopass",             KWD_NOPASS             )
DEF_KEYWORD("nullify",            KWD_NULLIFY            )
DEF_KEYWORD("number",             KWD_NUMBER             )
DEF_KEYWORD("open",               KWD_OPEN               )
DEF_KEYWORD("opened",             KWD_OPENED             )
DEF_KEYWORD("operator",           KWD_OPERATOR           )
DEF_KEYWORD("optional",           KWD_OPTIONAL           )
DEF_KEYWORD("out",                KWD_OUT                )
DEF_KEYWORD("pad",                KWD_PAD                )
DEF_KEYWORD("parameter",          KWD_PARAMETER          )
DEF_KEYWORD("pass",               KWD_PASS               )
DEF_KEYWORD("pause",              KWD_PAUSE              )
DEF_KEYWORD("pointer",            KWD_POINTER            )
DEF_KEYWORD("position",           KWD_POSITION           )
DEF_KEYWORD("precision",          KWD_PRECISION          )
DEF_KEYWORD("print",              KWD_PRINT              )
DEF_KEYWORD("private",            KWD_PRIVATE            )
DEF_KEYWORD("procedure",          KWD_PROCEDURE          )
DEF_KEYWORD("program",            KWD_PROGRAM            )
DEF_KEYWORD("protected",          KWD_PROTECTED          )
DEF_KEYWORD("public",             KWD_PUBLIC             )
DEF_KEYWORD("pure",               KWD_PURE               )
DEF_KEYWORD("read",               KWD_READ               )
DEF_KEYWORD("read_formatted",     KWD_READ_FORMATTED     )
DEF_KEYWORD("read_unformatted",   KWD_READ_UNFORMATTED   )
DEF_KEYWORD("read_write",         KWD_READ_WRITE         )
DEF_KEYWORD("real",               KWD_REAL               )
DEF_KEYWORD("rec",                KWD_REC                )
DEF_KEYWORD("recl",               KWD_RECL               )
DEF_KEYWORD("return",             KWD_RETURN             )
DEF_KEYWORD("rewind",             KWD_REWIND             )
DEF_KEYWORD("round",              KWD_ROUND              )
DEF_KEYWORD("save",               KWD_SAVE               )
DEF_KEYWORD("select_case",        KWD_SELECT_CASE        )
DEF_KEYWORD("select_type",        KWD_SELECT_TYPE        )
DEF_KEYWORD("sequence",           KWD_SEQUENCE           )
DEF_KEYWORD("sequential",         KWD_SEQUENTIAL         )
DEF_KEYWORD("sign",               KWD_SIGN               )
DEF_KEYWORD("size",               KWD_SIZE               )
DEF_KEYWORD("source",             KWD_SOURCE             )
DEF_KEYWORD("status",             KWD_STATUS             )
DEF_KEYWORD("stop",               KWD_STOP               )
DEF_KEYWORD("subroutine",         KWD_SUBROUTINE         )
DEF_KEYWORD("target",             KWD_TARGET             )
DEF_KEYWORD("then",               KWD_THEN               )
DEF_KEYWORD("true",               KWD_TRUE               )
DEF_KEYWORD("type",               KWD_TYPE               )
DEF_KEYWORD("unformatted",        KWD_UNFORMATTED        )
DEF_KEYWORD("unit",               KWD_UNIT               )
DEF_KEYWORD("use",                KWD_USE                )
DEF_KEYWORD("value",              KWD_VALUE              )
DEF_KEYWORD("volatile",           KWD_VOLATILE           )
DEF_KEYWORD("where",              KWD_WHERE              )
DEF_KEYWORD("write",              KWD_WRITE              )
DEF_KEYWORD("write_formatted",    KWD_WRITE_FORMATTED    )
DEF_KEYWORD("write_unformatted",  KWD_WRITE_UNFORMATTED  )

DEF_PP_DIRECTIVE("ppd",           "",            PPD_NULL)
DEF_PP_DIRECTIVE("ppd_define",   "define",      PPD_DEFINE)
DEF_PP_DIRECTIVE("ppd_elif",     "elif",        PPD_ELIF)
DEF_PP_DIRECTIVE("ppd_else",     "else",        PPD_ELSE)
DEF_PP_DIRECTIVE("ppd_endif",    "endif",       PPD_ENDIF)
DEF_PP_DIRECTIVE("ppd_error",    "error",       PPD_ERROR)
DEF_PP_DIRECTIVE("ppd_if",       "if",          PPD_IF)
DEF_PP_DIRECTIVE("ppd_ifdef",    "ifdef",       PPD_IFDEF)
DEF_PP_DIRECTIVE("ppd_ifndef",   "ifndef",      PPD_IFNDEF)
DEF_PP_DIRECTIVE("ppd_include",  "include",     PPD_INCLUDE)
DEF_PP_DIRECTIVE("ppd_line",     "line",        PPD_LINE)
DEF_PP_DIRECTIVE("ppd_pragma",   "pragma",      PPD_PRAGMA)
DEF_PP_DIRECTIVE("ppd_undef",    "undef",       PPD_UNDEF)
DEF_PP_DIRECTIVE("ppd_warning",  "warning",     PPD_WARNING)

DEF_OPERATOR("not",      "!",               OP_LOGICAL_NOT)
DEF_OPERATOR("not_eq",   "!=",              OP_NE)
DEF_OPERATOR("stringize","#",               OP_STRINGIZE)
DEF_OPERATOR("splice",   "##",              OP_TOKEN_SPLICE)
DEF_OPERATOR("mod",      "%",               OP_MODULO)
DEF_OPERATOR("splice",   "%:%:",            ALT_OP_TOKEN_SPLICE)
DEF_OPERATOR("mod_eq",   "%=",              OP_ASSIGN_MODULO)
DEF_OPERATOR("bitand",   "&",               OP_BIT_AND)
DEF_OPERATOR("adr",      "&",               OP_ADDRESS)
DEF_OPERATOR("and",      "&&",              OP_LOGICAL_AND)
DEF_OPERATOR("and_eq",   "&=",              OP_ASSIGN_BIT_AND)
DEF_OPERATOR("deref",    "*",               OP_DEREFERENCE)
DEF_OPERATOR("mult",     "*",               OP_MULTIPLY)
DEF_OPERATOR("mult_eq",  "*=",              OP_ASSIGN_MULTIPLY)
DEF_OPERATOR("plus",     "+",               OP_PLUS)
DEF_OPERATOR("uplus",    "+",               OP_UNARY_PLUS)
DEF_OPERATOR("incr",     "++",              OP_INCREMENT)
DEF_OPERATOR("plus_eq",  "+=",              OP_ASSIGN_PLUS)
DEF_OPERATOR("comma_op", ",",               OP_COMMA)
DEF_OPERATOR("minus",    "-",               OP_MINUS)
DEF_OPERATOR("uminus",   "-",               OP_UNARY_MINUS)
DEF_OPERATOR("decr",     "--",              OP_DECREMENT)
DEF_OPERATOR("minus_eq", "-=",              OP_ASSIGN_MINUS)
DEF_OPERATOR("ptr_m",    "->",              OP_POINTER_MEMBER)
DEF_OPERATOR("ptr_ptm",  "->*",             OP_POINTER_POINTER_TO_MEMBER)
DEF_OPERATOR("obj_m",    ".",               OP_OBJECT_MEMBER)
DEF_OPERATOR("obj_ptm",  ".*",              OP_OBJECT_POINTER_TO_MEMBER)
DEF_OPERATOR("div",      "/",               OP_DIVIDE)
DEF_OPERATOR("div_eq",   "/=",              OP_ASSIGN_DIVIDE)
DEF_OPERATOR("else",     ":",               OP_ELSE)
DEF_OPERATOR("scope",    "::",              OP_SCOPE_REF)
DEF_OPERATOR("lt",       "<",               OP_LT)
DEF_OPERATOR("lsl",      "<<",              OP_SHIFT_LEFT)
DEF_OPERATOR("lsl_eq",   "<<=",             OP_ASSIGN_SHIFT_LEFT)
DEF_OPERATOR("le",       "<=",              OP_LE)
DEF_OPERATOR("eq",       "=",               OP_ASSIGN)
DEF_OPERATOR("equals",   "==",              OP_EQ)
DEF_OPERATOR("gt",       ">",               OP_GT)
DEF_OPERATOR("ge",       ">=",              OP_GE)
DEF_OPERATOR("lsr",      ">>",              OP_SHIFT_RIGHT)
DEF_OPERATOR("lsr_eq",   ">>=",             OP_ASSIGN_SHIFT_RIGHT)
DEF_OPERATOR("cond",     "?",               OP_CONDITIONAL)
DEF_OPERATOR("xor",      "^",               OP_BIT_PLUS)
DEF_OPERATOR("xor_eq",   "^=",              OP_ASSIGN_BIT_PLUS)
DEF_OPERATOR("bitor",    "|",               OP_BIT_OR)
DEF_OPERATOR("or_eq",    "|=",              OP_ASSIGN_BIT_OR)
DEF_OPERATOR("or",       "||",              OP_LOGICAL_OR)
DEF_OPERATOR("compl",    "~",               OP_BIT_NOT)

DEF_OPERATOR("and",      "and",             OP_ALT_LOGICAL_AND)
DEF_OPERATOR("and_eq",   "and_eq",          OP_ALT_ASSIGN_BIT_AND)
DEF_OPERATOR("bitand",   "bitand",          OP_ALT_BIT_AND)
DEF_OPERATOR("bitor",    "bitor",           OP_ALT_BIT_OR)
DEF_OPERATOR("compl",    "compl",           OP_ALT_BIT_NOT)
DEF_OPERATOR("not",      "not",             OP_ALT_LOGICAL_NOT)
DEF_OPERATOR("not_eq",   "not_eq",          OP_ALT_NE)
DEF_OPERATOR("or",       "or",              OP_ALT_LOGICAL_OR)
DEF_OPERATOR("or_eq",    "or_eq",           OP_ALT_ASSIGN_BIT_OR)
DEF_OPERATOR("xor",      "xor",             OP_ALT_BIT_PLUS)
DEF_OPERATOR("xor_eq",   "xor_eq",          OP_ALT_ASSIGN_BIT_PLUS)

/*
 *
 */
DEF_DECLARATOR("reference", "&",            DECL_REFERENCE)
DEF_DECLARATOR("pointer",   "*",            DECL_POINTER)
DEF_DECLARATOR("ellipsis",  "...",          DECL_VAR_ARGS)

DEF_MISC("system_header",           SYSTEM_HEADER_STRING)
DEF_MISC("header",                  HEADER_STRING)
DEF_MISC("char_lit",                CHARACTER_LITERAL)
DEF_MISC("lchar_lit",               L_CHARACTER_LITERAL)
DEF_MISC("str_lit",                 STRING_LITERAL)
DEF_MISC("lstr_lit",                L_STRING_LITERAL)
DEF_MISC("int_lit",                 INTEGER_LITERAL)
DEF_MISC("oct_lit",                 OCTAL_LITERAL)
DEF_MISC("dec_lit",                 DECIMAL_LITERAL)
DEF_MISC("hex_lit",                 HEXADECIMAL_LITERAL)
DEF_MISC("float_lit",               FLOATING_LITERAL)
DEF_MISC("pp_number",               PP_NUMBER)
DEF_MISC("identifier",              IDENTIFIER)
DEF_MISC("macro_function",          MACRO_FUNCTION_IDENTIFIER)
DEF_MISC("macro_object",            MACRO_OBJECT_IDENTIFIER)
DEF_MISC("comment",                 COMMENT)
DEF_MISC("block_comment",           BLOCK_COMMENT)
DEF_MISC("command_line",            COMMAND_LINE)
DEF_MISC("predefined_macro",        PREDEFINED_MACRO)
DEF_MISC("location",                LOCATION)
DEF_MISC("include_directory",       INCLUDE_DIRECTORY)
DEF_MISC("use_on_code",             USE_ON_CODE)

DEF_RULE("constant_expression",     constant_expression)
DEF_RULE("elif_group",              elif_group)
DEF_RULE("else_group",              else_group)
DEF_RULE("function_macro",          function_macro)
DEF_RULE("group_part",              group_part)
DEF_RULE("if_section",              if_section)
DEF_RULE("if_group",                if_group)
DEF_RULE("object_macro",            object_macro)
DEF_RULE("translation_unit",        translation_unit)
DEF_RULE("preprocessing_file",      preprocessing_file)
DEF_RULE("replacement_list",        replacement_list)

